def fetch_victorops_incidents(date_begin, date_end, routing_key, limit=100):
    """Fetch incidents from VictorOps API."""
    url = f"{VICTOROPS_URL}?startedAfter={date_begin}&startedBefore={date_end}&routingKey={routing_key}&limit={limit}"
    headers = {
        'X-VO-Api-Id': API_HEADERS['X-VO-Api-Id'],
        'X-VO-Api-Key': API_HEADERS['X-VO-Api-Key']
    }
    
    response = requests.get(url, headers=headers)
    if response.status_code != 200:
        logger.error(f"Failed to fetch data: {response.status_code}, {response.text}")
        return None
    try:
        return response.json()
    except ValueError as e:
        logger.error(f"Failed to parse response JSON: {e}")
        return None



# Convert start_date and end_date to ISO8601 format with timezone information
start_date_iso = start_date.strftime('%Y-%m-%dT%H:%M:%SZ')
end_date_iso = end_date.strftime('%Y-%m-%dT%H:%M:%SZ')

# Fetch incidents
incidents_data = fetch_victorops_incidents(
    date_begin=start_date_iso,
    date_end=end_date_iso,
    routing_key='observability-engineering'
)
